\connect transportation-systems-main transportation-systems

DROP SCHEMA IF EXISTS passenger_census CASCADE;
CREATE SCHEMA passenger_census;
SET search_path TO passenger_census, public;

-- census block polygons
\echo or_census_block_polygons
CREATE TABLE or_census_block_polygons
AS
SELECT geoid10 AS census_block, ST_Transform(wkb_geometry, 4326) AS geom_polygon_4326
FROM census_gis.tl_2017_41_tabblock10;
ALTER TABLE or_census_block_polygons OWNER TO "transportation-systems";
ALTER TABLE or_census_block_polygons ADD PRIMARY KEY (census_block);
CREATE INDEX ON or_census_block_polygons USING GIST (geom_polygon_4326);

\echo wa_census_block_polygons
CREATE TABLE wa_census_block_polygons
AS
SELECT geoid10 AS census_block, ST_Transform(wkb_geometry, 4326) AS geom_polygon_4326
FROM census_gis.tl_2017_53_tabblock10;
ALTER TABLE wa_census_block_polygons OWNER TO "transportation-systems";
ALTER TABLE wa_census_block_polygons ADD PRIMARY KEY (census_block);
CREATE INDEX ON wa_census_block_polygons USING GIST (geom_polygon_4326);

\echo metro_census_block_lookup
CREATE TABLE metro_census_block_lookup
AS
SELECT * FROM or_census_block_polygons
INNER JOIN origin_destination.xwalk
ON or_census_block_polygons.census_block = origin_destination.xwalk.tabblk2010
UNION
SELECT * FROM wa_census_block_polygons
INNER JOIN origin_destination.xwalk
ON wa_census_block_polygons.census_block = origin_destination.xwalk.tabblk2010;
ALTER TABLE metro_census_block_lookup OWNER TO "transportation-systems";
ALTER TABLE metro_census_block_lookup ADD PRIMARY KEY (census_block);
CREATE INDEX ON metro_census_block_lookup USING GIST (geom_polygon_4326);

\echo passenger_census_raw
CREATE TEMPORARY TABLE passenger_census_raw (
  summary_begin_date date,
  route_number integer,
  direction integer,
  service_key text,
  stop_seq integer,
  location_id integer,
  public_location_description text,
  ons integer,
  offs integer,
  x_coord double precision,
  y_coord double precision
);
\copy passenger_census_raw from '~/Raw/passenger_census.csv' with csv header

-- add geometry column
ALTER TABLE passenger_census_raw ADD COLUMN geom_4326 geometry;
UPDATE passenger_census_raw
  SET geom_4326 = ST_Transform(ST_SetSRID(ST_MakePoint(x_coord, y_coord), 2913), 4326);
CREATE INDEX ON passenger_census_raw USING GIST (geom_4326);

-- trim service_key
UPDATE passenger_census_raw
  SET service_key = trim(service_key);

-- tag with census block
\echo passenger_census
CREATE TABLE passenger_census AS
SELECT summary_begin_date, route_number, direction, service_key, stop_seq,
  location_id, public_location_description, ons, offs, x_coord, y_coord, geom_4326,
  census_block
FROM passenger_census_raw
LEFT JOIN metro_census_block_lookup
ON ST_Within(
  passenger_census_raw.geom_4326,
  metro_census_block_lookup.geom_polygon_4326
);
CREATE INDEX ON passenger_census USING GIST (geom_4326);
ALTER TABLE passenger_census OWNER TO "transportation-systems";

-- primary key
ALTER TABLE passenger_census ADD COLUMN id serial;
ALTER TABLE passenger_census ADD PRIMARY KEY (id);

-- annual summary by route
\echo annual_route_ridership
CREATE TABLE annual_route_ridership
AS
SELECT
  extract(year from summary_begin_date) AS year,
  route_number,
  direction,
  service_key,
  SUM(ons) AS total_ons,
  SUM(offs) AS total_offs
FROM passenger_census.passenger_census
GROUP BY year, route_number, direction, service_key
ORDER BY route_number, direction, year;

ALTER TABLE annual_route_ridership OWNER TO "transportation-systems";
ALTER TABLE annual_route_ridership ADD COLUMN id serial;
ALTER TABLE annual_route_ridership ADD PRIMARY KEY (id);

-- annual summary by census_block
\echo annual_census_block_ridership
CREATE TABLE annual_census_block_ridership
AS
SELECT
  extract(year from summary_begin_date) AS year,
  passenger_census.census_block,
  SUM(ons) AS total_ons,
  COUNT(ons) AS stops,
  SUM(ons) / COUNT(ons) AS ons_per_stop,
  metro_census_block_lookup.geom_polygon_4326
FROM passenger_census
LEFT JOIN metro_census_block_lookup
ON passenger_census.census_block = metro_census_block_lookup.census_block
GROUP BY year, passenger_census.census_block, metro_census_block_lookup.geom_polygon_4326
ORDER BY census_block, year;

ALTER TABLE annual_census_block_ridership OWNER TO "transportation-systems";
ALTER TABLE annual_census_block_ridership ADD COLUMN id serial;
ALTER TABLE annual_census_block_ridership ADD PRIMARY KEY (id);

-- layout for sandbox
CREATE TEMPORARY TABLE y2009
AS
SELECT census_block, CAST(total_ons AS double precision), CAST(stops AS double precision), geom_polygon_4326
FROM annual_census_block_ridership
WHERE year = 2009;

CREATE TEMPORARY TABLE y2017
AS
SELECT census_block, CAST(total_ons AS double precision), CAST(stops AS double precision)
FROM annual_census_block_ridership
WHERE year = 2017;

CREATE TABLE census_block_change
AS
SELECT y2009.census_block,
       y2009.total_ons AS total_ons_2009,
       y2017.total_ons AS total_ons_2017,
       CASE WHEN y2009.total_ons > 0 THEN
         100.0 * (y2017.total_ons - y2009.total_ons) / y2009.total_ons
       ELSE 99999
       END AS ons_pct_change,
       y2009.stops AS stops_2009,
       y2017.stops AS stops_2017,
       CASE WHEN y2009.stops > 0 THEN
         100.0 * (y2017.stops - y2009.stops) / y2009.stops
       ELSE 99999
       END AS stops_pct_change,
       y2009.geom_polygon_4326
FROM y2009
INNER JOIN y2017
ON y2009.census_block = y2017.census_block;

ALTER TABLE census_block_change OWNER TO "transportation-systems";
ALTER TABLE census_block_change ADD PRIMARY KEY (census_block);
