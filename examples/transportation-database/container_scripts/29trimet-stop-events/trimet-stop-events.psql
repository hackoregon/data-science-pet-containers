\connect "transportation-systems-main"

DROP SCHEMA IF EXISTS trimet_stop_events CASCADE;
CREATE SCHEMA trimet_stop_events;
SET search_path TO trimet_stop_events, public;

CREATE TABLE trimet_stop_events (
  service_date date,
  vehicle_number integer,
  train integer,
  route_number integer,
  direction integer,
  trip_number integer,
  service_key text,
  stop_time integer,
  arrive_time integer,
  seconds_late integer,
  leave_time integer,
  dwell integer,
  location_id integer,
  door integer,
  lift integer,
  ons integer,
  offs integer,
  estimated_load integer,
  train_mileage double precision,
  from_location integer,
  mileage_there double precision,
  left_there integer,
  travel_miles double precision,
  travel_seconds integer
);

\copy trimet_stop_events from '~/Raw/m2017_09_trimet_stop_events.csv' with csv header
\copy trimet_stop_events from '~/Raw/m2017_10_trimet_stop_events.csv' with csv header
\copy trimet_stop_events from '~/Raw/m2017_11_trimet_stop_events.csv' with csv header

ALTER TABLE trimet_stop_events
  ADD COLUMN id serial;
ALTER TABLE trimet_stop_events
  ADD CONSTRAINT trimet_stop_events_pkey PRIMARY KEY (id);

-- create the detail table for time of day analysis
CREATE MATERIALIZED VIEW totals_ons_by_hour AS
  SELECT service_date, service_key,
    to_char(service_date, 'D') AS weekday,
    round(arrive_time / 3600.0, 1) AS hour_of_day,
    sum(ons) AS total_ons
  FROM trimet_stop_events
  GROUP BY service_date, service_key, hour_of_day
  ORDER BY service_date, hour_of_day
;

VACUUM ANALYZE;
