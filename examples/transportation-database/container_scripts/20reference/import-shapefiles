#! /bin/bash

# define parameters
export DBOWNER=transportation-systems
export PGDATABASE=transportation-systems-main

echo "Importing TriMet and TIGER/LineÂ® shapefiles"
pushd ~/Raw
for zipfile in \
  https://developer.trimet.org/gis/data/tm_boundary.zip \
  https://developer.trimet.org/gis/data/tm_parkride.zip \
  https://developer.trimet.org/gis/data/tm_rail_lines.zip \
  https://developer.trimet.org/gis/data/tm_rail_stops.zip \
  https://developer.trimet.org/gis/data/tm_routes.zip \
  https://developer.trimet.org/gis/data/tm_stops.zip \
  https://developer.trimet.org/gis/data/tm_route_stops.zip \
  https://developer.trimet.org/gis/data/tm_tran_cen.zip \
  https://www2.census.gov/geo/tiger/TIGER2017/TRACT/tl_2017_41_tract.zip \
  https://www2.census.gov/geo/tiger/TIGER2017/BG/tl_2017_41_bg.zip \
  https://www2.census.gov/geo/tiger/TIGER2017/TABBLOCK/tl_2017_41_tabblock10.zip
do
  echo "Downloading ${zipfile}"
  wget -nc -q ${zipfile}
  table=`echo ${zipfile} | sed 's;^.*/;;' | sed 's;.zip$;;'`

  # in theory, ogr2ogr can import zipped shapefiles directly but older versions may not work
  rm -fr ${table}; mkdir $table; cd $table
  unzip -qq ../${table}.zip

  echo "Creating table '${table}' in the 'public' schema"
  ogr2ogr -f PostgreSQL -overwrite -lco PRECISION=NO -nlt PROMOTE_TO_MULTI \
    PG:"dbname=${PGDATABASE}" ${table}.shp
  psql -U ${DBOWNER} -d ${PGDATABASE} -c "ALTER TABLE ${table} OWNER TO \"${DBOWNER}\";"
  cd ..
done
popd
